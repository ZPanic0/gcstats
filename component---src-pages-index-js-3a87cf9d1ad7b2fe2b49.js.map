{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/Message.js","webpack:///./src/pages/index.js"],"names":["MessageContent","props","children","className","content","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","isNil","handledProps","propTypes","MessageHeader","create","val","MessageItem","defaultProps","as","MessageList","items","_Component","Message","_getPrototypeOf2","_this","this","_len","arguments","length","args","Array","_key","call","apply","concat","e","onDismiss","key","value","_this$props","attached","color","compact","error","floating","header","hidden","icon","info","list","negative","positive","size","success","visible","warning","dismissIcon","Icon","name","onClick","handleDismiss","autoGenerateKey","IndexPage","render","title","Header","to","Component"],"mappings":"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","file":"component---src-pages-index-js-3a87cf9d1ad7b2fe2b49.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a content.\n */\n\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageContent, props);\n  var ElementType = getElementType(MessageContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MessageContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a header.\n */\n\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MessageHeader, props);\n  var ElementType = getElementType(MessageHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageHeader.create = createShorthandFactory(MessageHeader, function (val) {\n  return {\n    content: val\n  };\n});\nexport default MessageHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message list can contain an item.\n */\n\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageItem, props);\n  var ElementType = getElementType(MessageItem, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageItem.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageItem.defaultProps = {\n  as: 'li'\n};\nMessageItem.create = createShorthandFactory(MessageItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default MessageItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDismiss\", function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          content = _this$props.content,\n          error = _this$props.error,\n          floating = _this$props.floating,\n          header = _this$props.header,\n          hidden = _this$props.hidden,\n          icon = _this$props.icon,\n          info = _this$props.info,\n          list = _this$props.list,\n          negative = _this$props.negative,\n          onDismiss = _this$props.onDismiss,\n          positive = _this$props.positive,\n          size = _this$props.size,\n          success = _this$props.success,\n          visible = _this$props.visible,\n          warning = _this$props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: \"close\",\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon, {\n        autoGenerateKey: false\n      }), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header, {\n        autoGenerateKey: false\n      }), MessageList.create(list, {\n        autoGenerateKey: false\n      }), createHTMLParagraph(content, {\n        autoGenerateKey: false\n      })));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n_defineProperty(Message, \"Content\", MessageContent);\n\n_defineProperty(Message, \"Header\", MessageHeader);\n\n_defineProperty(Message, \"List\", MessageList);\n\n_defineProperty(Message, \"Item\", MessageItem);\n\n_defineProperty(Message, \"handledProps\", [\"as\", \"attached\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"error\", \"floating\", \"header\", \"hidden\", \"icon\", \"info\", \"list\", \"negative\", \"onDismiss\", \"positive\", \"size\", \"success\", \"visible\", \"warning\"]);\n\nexport { Message as default };\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};","import React, { Component } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"../components/GatsbyDefault/layout\"\r\nimport SEO from \"../components/GatsbyDefault/seo\"\r\nimport { Message } from \"semantic-ui-react\"\r\n\r\nexport default class IndexPage extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <SEO title=\"Home\" />\r\n        <Message negative>\r\n          <Message.Header>This site hasn't launched yet.</Message.Header>\r\n          <p>Data here is not being updated yet. Results may be stale and bugs are probably present.</p>\r\n        </Message>\r\n        <Link to=\"/player/\">Go to Player Search</Link>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}